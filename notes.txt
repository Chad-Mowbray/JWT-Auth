Resources:
https://www.freecodecamp.org/news/what-are-json-web-tokens-jwt-auth-tutorial/
https://tutorialedge.net/nodejs/nodejs-jwt-authentication-tutorial/
https://github.com/weibenfalk/jwtToken-react-express


Create a lesson about JWT

Use a public/private cert  

hide private cert, make pub available

(add the lesson with example code Bob and Alice) (fakeSHA)

Have a server, with two endpoints: public and private

Have user log in
issue user a signed JWT
If JWT valid, grant access


Show how modifying a single character in the token invalidates it (show a bad attempt at stealing a token)


More Modules:
Add a seperate module on analysis tools (ZAP, Wireshark, etc)
Docker
Webgoat


Challenges:
    -add another super-secret page, and make sure that only users authorized can access it.
    - add refresh token
    - Try and understand this code.  Your predecessor might not have been the best coder.  Can you find any bugs?
        Fix them.  
    -  change cookies to: secure (is not transmitted via HTTP, only via HTTPS) and httpOnly (can't be read by Javascript) 
    - put token in Auth header instead of cookie
    - leave token payload blank, have students fill it out
    - store only the jti in the db
    - at first, authorize just based on if the token is authentic, then as an exercise, parse to token to check for username, password, jti or whatever
    - start off putting the username and password in the token, then have them change it
PUT TOKEN IN BEARER HEADER